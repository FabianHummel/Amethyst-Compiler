[Expr.Assign]
Fields = [ "Token Name" , "Expr Value" ]
ToString = "{Name} = {Value}"

[Expr.Binary]
Fields = [
    "Expr Left",
    "Token Operator",
    "Expr Right"
]
ToString = "{Left} {Operator} {Right}"

[Expr.Call]
Fields = [
    "Expr Callee",
    "IList<Expr> Arguments"
]
ToString = "{Callee}({Arguments})"

[Expr.Grouping]
Fields = [ "Expr Expression" ]
ToString = "({Expression})"

[Expr.Literal]
Fields = [ "object Value" ]
ToString = "{Value}"

[Expr.Object]
Fields = [ "IDictionary<Expr, Expr> Values" ]
ToString = "{{{string.Join(',', Values.Select(kvp => kvp.Key.ToString() + ':' + kvp.Value.ToString()))}}}"

[Expr.Array]
Fields = [ "IList<Expr> Values" ]
ToString = "[{string.Join(',', Values)}]"

[Expr.Logical]
Fields = [
    "Expr Left",
    "Token Operator",
    "Expr Right"
]
ToString = "{Left} {Operator} {Right}"

[Expr.Unary]
Fields = [
    "Token Operator",
    "Expr Right"
]
ToString = "{Operator}{Right}"

[Expr.Variable]
Fields = [ "Token Name" ]
ToString = "{Name}"

[Stmt.Block]
Fields = [ "IList<Stmt> Statements" ]
ToString = "{Statements}"

[Stmt.Expression]
Fields = [ "Expr Expr" ]
ToString = "{Expr}"

[Stmt.Namespace]
Fields = [
    "Token Name",
    "IList<Stmt> Body",
    "bool IsPreprocessed"
]
ToString = "namespace {Name} {Body}"

[Stmt.Function]
Fields = [
    "bool Ticking",
    "bool Initializing",
    "Token Name",
    "IList<Token> Params",
    "IList<Stmt> Body",
    "bool IsPreprocessed"
]
ToString = "function {Name}({Params}) {Body}"

[Stmt.If]
Fields = [
    "Expr Condition",
    "Stmt ThenBranch",
    "Stmt? ElseBranch",
    "bool IsPreprocessed"
]
ToString = "if {Condition} then {ThenBranch} else {ElseBranch}"

[Stmt.Print]
Fields = [ 
    "Expr Expr",
    "bool IsPreprocessed"
]
ToString = "print {Expr}"

[Stmt.Comment]
Fields = [ "Token Value" ]
ToString = "# {Value}"

[Stmt.Return]
Fields = [ 
    "Expr? Value",
    "bool IsPreprocessed"
]
ToString = "return {Value}"

[Stmt.Break]
Fields = [
    "bool IsPreprocessed"
]
ToString = "break"

[Stmt.Continue]
Fields = [
    "bool IsPreprocessed"
]
ToString = "continue"

[Stmt.Var]
Fields = [
    "Token Name",
    "Expr? Initializer",
    "bool IsPreprocessed"
]
ToString = "var {Name} = {Initializer}"

[Stmt.While]
Fields = [
    "Expr Condition",
    "Stmt Body",
    "bool IsPreprocessed"
]
ToString = "while {Condition} do {Body}"